trigger:
- main
- feature/*
pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  GitVersion.NuGetVersion: ''
  solution: '**/*.sln'

jobs:
- job: package
  displayName: 'Build, pack and push'
  continueOnError: false
  steps:

  - checkout: self
    persistCredentials: true
    
  - task: UseGitVersion@5
    displayName: 'GitVersion'
    inputs:
      versionSpec: '5.7.0'
  
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '5.0.402'
      includePreviewVersions: true

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '--configuration $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersion)'

  - task: DotNetCoreCLI@2
    displayName: "dotnet test"
    inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
        command: 'pack'
        packagesToPack: '$(solution)'
        nobuild: true
        packDirectory: '$(Build.ArtifactStagingDirectory)'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'GitVersion.NuGetVersion'
  
  - task: NuGetCommand@2
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'NugetPush'
      versioningScheme: byEnvVar2
      versionEnvVar: "GitVersion.SemVer"